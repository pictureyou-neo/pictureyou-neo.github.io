{"meta":{"title":"FTWR | Follow the white rabbit","subtitle":"exit","description":"develop log by neo","author":"pictureyou","url":"http://pictureyou-neo.github.io","root":"/"},"pages":[],"posts":[{"title":"Hexo / trouble shooting 총집합, 에러, 해결방법, 색변경, 사이드바","slug":"hexo-troubleshooting-fix-error-howto","date":"2020-09-22T03:35:25.000Z","updated":"2020-09-23T03:05:01.066Z","comments":true,"path":"2020/09/22/hexo-troubleshooting-fix-error-howto/","link":"","permalink":"http://pictureyou-neo.github.io/2020/09/22/hexo-troubleshooting-fix-error-howto/","excerpt":"","text":"#닦고 조이고 기름치자 며칠정도 남는시간을 투자하고 나니, Hexo 를 활용한 그럴듯한 나만의 블로그가 만들어 졌다. 하지만 여전히 아쉬운 부분들이 있었고 너무 거슬리는 것도 있었다. 정적웹 페이지가 돌아가는 방식 이나 HTML, CSS, Java script 에 문외한인 내가 구글링으로 문제를 해결해 왔던 것을 메모해 두었고 이곳에 옮겨 적어본다. [목차] 카테고리 추가시 이름에 index. 가 항상 붙는 문제 메인바디 텍스트 영역, 사이드바 색 변경 Cannot GET / [Git] fatal : refusing to merge unrelated histories \\f0d7 깨짐 현상, FontAwesome 사이드바 크기 줄이기 이미지가 안뜨는 경우 #카테고리 추가시 이름에 index. 가 항상 붙는 문제 포스트에서 -categories 를 활용하면, Hexo 블로그 상단메뉴에 항목으로 추가가 가능하다. 그런데, Hueman 테마를 설치 후에 “index.” 가 카테고리 이름 앞에 항상 붙어서 나오는 것을 확인하였다. 원인은, 테마 개발자가 메뉴바 번역(?) 을 위해 적어논 코드가 배포버전에서 제외되지 않은듯 하다. 아마 디버깅 목적이 아니었을까? 해결방법 themes\\hueman\\layout\\common 이 경로의 header.ejs 파일에 보면, 이런 부분이 있다. __(‘index.’ + i.toLowerCase()) 이걸 이렇게 바꾸면 된다. 나는 전체 소문자 변경도 빼고 싶어서 i 만 남겨두었다. __(i) 코드는 이렇게 생겼다. 123456789101112 &lt;a class=&quot;main-nav-list-link&quot; href=&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;&gt;&lt;%= __(i) %&gt;&lt;/a&gt; &lt;ul class=&quot;main-nav-list-child&quot;&gt; &lt;li class=&quot;main-nav-list-item&quot;&gt; &lt;% for (var j in theme.menu[i]) &#123; %&gt; &lt;a class=&quot;main-nav-list-link&quot; href=&quot;&lt;%- url_for(theme.menu[i][j]) %&gt;&quot;&gt;&lt;%= __(j) %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/li&gt;&lt;% &#125; else &#123; %&gt;&lt;li class=&quot;main-nav-list-item&quot; &gt; &lt;a class=&quot;main-nav-list-link&quot; href=&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;&gt;&lt;%= __(i) %&gt;&lt;/a&gt; #메인바디 텍스트 영역, 사이드바 색 변경 Hexo 를 설치한 뒤에, 테마 폴더 안에 있는 _config.yml 을 사용하여 여러 커스텀 설정과 색 변경을 했는데, 유독 메인바디 텍스트 영역과 사이드바 배경은 색변경이 불가능 했었다. 처음 시도해 봤던 방식은 노가다 였다. 화면을 캡쳐해서 포토샵으로 띄우고 사이드바 색 (#F0F0F0) 과 텍스트 영역 배경색 (#000000) 을 VSC 에서 전체 검색으로 찾아서 다른색으로 바꿔보는 방법 이었다. 단시간에 해결이 안되다보니 필오님의 github 에서 받아두었던 폴더도 뒤져보다 보니, style.css 파일을 건드리면 될것만 같았다. 하지만, 직접 그 파일을 수정하여도 원하는대로 색이 바뀌지 않았다. 해결방법 themes\\hueman\\source\\css 이 경로의 style.styl 파일을 수정하면 style.css 파일에 반영된다. 123.main-body margin-top: - nav-height background-color: color-main-background 이렇게 하고 나서도 여전히 사이드바는 색이 그대로 이다. 이건 다른 방법으로 해결해야 한다. 해결방법 themes\\hueman\\source\\css\\images 이 경로의 s-left.png 파일이 아래 코드에서 불리고 있다. 대충 통밥으로 읽어보면 sidebar 설정이 오른쪽일 경우와 그렇지 않을경우에, sidebar background 영역에 s-left.png 파일을 반복해서 그려주는것으로 보인다. 실제로 포토샵으로 s-left.png 파일을 불러서 색변경 해주면, 반영되는걸 볼 수 있다. 1234567891011.main-body-inner clearfix() position: relative box-sizing: border-box box-shadow: rgba(0, 0, 0, 0.0980392) 0px 1px 1px 0px if sidebar is right padding-right: sidebar-width background: url(images/s-left.png) repeat-y right 0 else padding-left: sidebar-width background: url(images/s-left.png) repeat-y left 0 #Cannot GET / Hexo 사용 초기에는 내가 쓴 포스트가 없는 상태에서 hello world.md 파일만 달랑 있었다. 순서가 어찌되었는지는 기억이 잘 나지 않으나, hexo server 명령으로 로컬서버에서 돌렸는데 웬 에러와 함께 블로그 전체가 보이지 않았다. 원인은, 포스트가 하나도 없는 상태에서 발생 가능하다. 아마 나도 hello world.md 를 지운 이후에 이러한 에러를 본듯 하다. 해결방법 포스트를 하나 작성하면 된다. 만약 draft 를 사용중 이라면, 아래와 같이 로컬서버 구동에 옵션을 넣어주면 된다. 1$ hexo server --draft #[Git] fatal : refusing to merge unrelated histories Git 을 사용하게 된 주된 이유중 하나는 사무실컴과 집컴 간의 usb 복붙 노가다를 안하기 위해서 였다. 다른 프로젝트도 이와같이 잘 사용하고 있었고, Hexo 사용 초기에도 얼른 내가 원하는대로 꾸미고 싶은 마음에 하루에 열번도 넘게 deploy 해 보던 시기가 있었다. 백업을 위해 push 를 했지만 불가. 집에서 pull을 해보려 해도 에러만 나왔다. 원인은, hexo deploy 명령으로 인해 Github 원격저장소에 commit 되는 내용과 실제 내가 로컬에서 작업한 내용이 달라서 그렇다. 좀 더 이해하기 쉽게 Source tree로 보면 이렇게 생겼고, site update 는 deploy 하면서 생기는 commit 이다. 즉, 예상치 못한 branch 가 생긴 셈이다. 해결방법 Merge 해도 된다. 근데 귀찮기 때문에 다른 방법을 찾던 중, Eric Han 님의 블로그에서 이러한 내용을 잘 설명해 둔 포스트를 발견했다. 나중에 해봐야지. Hexo 배포 원리와 백업하기 1$ hexo server --draft #\\f0d7 깨짐 현상, FontAwesome Hueman 테마를 이리저리 갖고 놀다가, 갑자기 블로그 메인 화면에 카테고리 옆에 네모 박스가 생긴 것을 발견했다. 이외에도 여러 군데에서 이 정체불명의 박스를 발견할수 있었다. 해결방법 themes\\hueman\\source\\css_variables.styl FontAwesome 폰트를 찾을 수 없어서 발생한 현상이다. 웹폰트를 적용해 본다고 이것저것 건드리다가, 지워버렸다. 아래와 같이 ‘FontAwesome’ 을 복구시켜 주면, 정상적으로 그림이 뜬다. FontAwesome 은 사전 정의된 그림을 폰트화 하여 사용할 수 있는것 같다. 나중에 웹페이지 작성시 간단한 아이콘은 이 폰트로 대체가 가능할것 같다. 만일 이렇게 해도 안된다면, 해당 코드 (나의 경우는 깨지는 아이콘이 \\f0d7 이었다)를 찾아서 css 나 styl 파일에서 사이즈 변경이나 여백 쪽을 확인해 보면 된다. 1font-sans = &#x27;Noto Sans KR&#x27;, &#x27;FontAwesome&#x27;, sans-serif #사이드바 크기 줄이기 포스팅을 하다보니 사이드바가 쓸데없이 넓대대 한 느낌을 받아서 슬림하게 만들고 싶었다. 해결방법 themes\\hueman\\source\\css_variables.styl 우선 위 경로에 가서, sidebar-width 와 sidebar-toggle-width 를 수정한다. 후자는 사이드바가 숨겨져 있는 상태에서 토글되는 사이즈 이다. 1234// Sidebarsidebar = hexo-config(&quot;customize.sidebar&quot;)sidebar-width = 250pxsidebar-toggle-width = 50px 위쪽에서 사이드바 색상 변경 할때 등장했던 s-left.png 의 이미지 사이즈를 sidebar-width 와 동일하게 수정해야 한다. 아래 경로에 있다. themes\\hueman\\source\\css\\images #이미지가 안뜨는 경우 가끔 포스팅에 이미지가 안뜨는 경우가 있다. 해결방법 이미지 캡쳐 프로그램 마다 기본 확장자 저장을 다르게한다. 예를들면 .PNG 또는 .png 인 경우다. 확장자에도 대소문자를 맞춰주면 정상적으로 이미지가 보인다. 마치 “;” 빠트려서 빌드에러난 기분이다. #속시원언제나 그렇듯, 내가 마주한 에러나 궁금증에 대해 해결할 수 있는 정확한 페이지를 찾게 되면 속이 뻥 뚫린다. 앞으로 겪게 될 Hexo 관련 문제해결 내용은 여기에 포스팅 할 예정이다. #Reference 킹황갓 구글 PPOffice Eric Han","categories":[{"name":"2_Web","slug":"2-Web","permalink":"http://pictureyou-neo.github.io/categories/2-Web/"},{"name":"Hexo","slug":"2-Web/Hexo","permalink":"http://pictureyou-neo.github.io/categories/2-Web/Hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://pictureyou-neo.github.io/tags/hexo/"},{"name":"PPOffice","slug":"PPOffice","permalink":"http://pictureyou-neo.github.io/tags/PPOffice/"},{"name":"theme","slug":"theme","permalink":"http://pictureyou-neo.github.io/tags/theme/"},{"name":"hueman","slug":"hueman","permalink":"http://pictureyou-neo.github.io/tags/hueman/"},{"name":"헥소","slug":"헥소","permalink":"http://pictureyou-neo.github.io/tags/%ED%97%A5%EC%86%8C/"},{"name":"테마","slug":"테마","permalink":"http://pictureyou-neo.github.io/tags/%ED%85%8C%EB%A7%88/"},{"name":"troubleshooting","slug":"troubleshooting","permalink":"http://pictureyou-neo.github.io/tags/troubleshooting/"},{"name":"에러","slug":"에러","permalink":"http://pictureyou-neo.github.io/tags/%EC%97%90%EB%9F%AC/"},{"name":"해결","slug":"해결","permalink":"http://pictureyou-neo.github.io/tags/%ED%95%B4%EA%B2%B0/"},{"name":"사이드바","slug":"사이드바","permalink":"http://pictureyou-neo.github.io/tags/%EC%82%AC%EC%9D%B4%EB%93%9C%EB%B0%94/"},{"name":"sidebar","slug":"sidebar","permalink":"http://pictureyou-neo.github.io/tags/sidebar/"},{"name":"color","slug":"color","permalink":"http://pictureyou-neo.github.io/tags/color/"},{"name":"카테고리","slug":"카테고리","permalink":"http://pictureyou-neo.github.io/tags/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/"},{"name":"index.","slug":"index","permalink":"http://pictureyou-neo.github.io/tags/index/"},{"name":"색변경","slug":"색변경","permalink":"http://pictureyou-neo.github.io/tags/%EC%83%89%EB%B3%80%EA%B2%BD/"},{"name":"색깔변경","slug":"색깔변경","permalink":"http://pictureyou-neo.github.io/tags/%EC%83%89%EA%B9%94%EB%B3%80%EA%B2%BD/"},{"name":"FontAwesome","slug":"FontAwesome","permalink":"http://pictureyou-neo.github.io/tags/FontAwesome/"}]},{"title":"Python basic / 파이썬 연산자, 숫자처리함수, 랜덤","slug":"python-basic-calculation-logic-random","date":"2020-09-21T06:32:48.000Z","updated":"2020-09-23T03:05:37.570Z","comments":true,"path":"2020/09/21/python-basic-calculation-logic-random/","link":"","permalink":"http://pictureyou-neo.github.io/2020/09/21/python-basic-calculation-logic-random/","excerpt":"","text":"#파이썬 연산자, 숫자처리함수, 랜덤또다른 기본인 숫자나 연산자 관련 내용이다. 유튜버 나도코딩 님의 무료강의를 들으면서 정리한 내용이다. [목차] 연산자 : 사칙연산은 생략, 논리연산 중 not 의 사용법 이다. 연산자 : 논리연산 중 AND(&amp;) 와 OR(|) 의 사용법 이다. 연산자 : 몫과 나머지를 구하는 방법 이다. 숫자처리함수 : 기본제공되는 함수들 이다. 랜덤 : 무작위 함수를 이용하여 다양한 곳에 활용할 수 있다. 랜덤 : 좀 더 편한 randrange 와 randint 가 있다. #연산자 사칙연산은 생략, 논리연산 중 not 의 사용법 이다. 1234# 1과 5가 같은게 아닌 것이 &quot;참&quot; 이므로 Trueprint(1 != 5)# 1과 5가 같지 않다는 &quot;참&quot; 이 다시한번 부정 되므로 Falseprint(not(1 != 5)) 결과 12TrueFalse 논리연산 중 AND(&amp;) 와 OR(|) 의 사용법 이다. 123456# AND 는 두가지 모두 True 여야 결과가 True 이다.print((3 &gt; 0) and (3 &lt; 5))print((3 &gt; 0) &amp; (3 &lt; 5))# OR 는 두가지 중 하나만 True 여도 결과가 True 이다.print((3 &gt; 0) or (3 &gt; 5))print((3 &gt; 0) | (3 &gt; 5)) 결과 1234TrueTrueTrueTrue 몫과 나머지를 구하는 방법 이다. 123# 몫 과 나머지도 구할 수 있다.print(20 // 6)print(20 % 3) 결과 1232 #숫자처리 함수 기본제공되는 함수들 이다.여기에 없을 경우 math를 찾아봐야 한다. 12345print(abs(-7)) # 절대값print(pow(2, 3)) # n제곱print(max(1, 2, 5, 10)) #최대값print(min(2, 4, 6, 8)) #최소값print(round(1.523)) #반올림 결과 12345781022 #랜덤 무작위 함수를 이용하여 다양한 곳에 활용할 수 있다. 123from random import *print(random()) # 0.0 ~ 1.0 미만의 랜덤값 생성print(int(random()*10)+1) # 1 ~ 10 이하의 값 생성 결과 120.42707199647285518 좀 더 편한 randrange 와 randint 가 있다 1234567from random import *print(randrange(1, 46)) # 1 ~ 46 미만의 임의의 값 생성print(randrange(1, 46)) # 1 ~ 46 미만의 임의의 값 생성print(randrange(1, 46)) # 1 ~ 46 미만의 임의의 값 생성print(randint(1, 45)) # 1 ~ 45 이하의 임의의 값 생성print(randint(1, 45)) # 1 ~ 45 이하의 임의의 값 생성print(randint(1, 45)) # 1 ~ 45 이하의 임의의 값 생성 결과 12345637393124103 #많이 사용되는 내용을 숙지해 둬야겠다.논리 연산자나 숫자처리 함수는 조건문이나, 어떤 결과를 가공할 때에 많이 쓰인다. #Reference 나도코딩 님의 파이썬 코딩 무료강의 킹황갓 구글","categories":[{"name":"4_Study","slug":"4-Study","permalink":"http://pictureyou-neo.github.io/categories/4-Study/"},{"name":"Python","slug":"4-Study/Python","permalink":"http://pictureyou-neo.github.io/categories/4-Study/Python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://pictureyou-neo.github.io/tags/python/"},{"name":"파이썬","slug":"파이썬","permalink":"http://pictureyou-neo.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"},{"name":"기초","slug":"기초","permalink":"http://pictureyou-neo.github.io/tags/%EA%B8%B0%EC%B4%88/"},{"name":"basic","slug":"basic","permalink":"http://pictureyou-neo.github.io/tags/basic/"},{"name":"py","slug":"py","permalink":"http://pictureyou-neo.github.io/tags/py/"},{"name":"연산자","slug":"연산자","permalink":"http://pictureyou-neo.github.io/tags/%EC%97%B0%EC%82%B0%EC%9E%90/"},{"name":"calculation","slug":"calculation","permalink":"http://pictureyou-neo.github.io/tags/calculation/"},{"name":"숫자처리함수","slug":"숫자처리함수","permalink":"http://pictureyou-neo.github.io/tags/%EC%88%AB%EC%9E%90%EC%B2%98%EB%A6%AC%ED%95%A8%EC%88%98/"},{"name":"abs","slug":"abs","permalink":"http://pictureyou-neo.github.io/tags/abs/"},{"name":"절대값","slug":"절대값","permalink":"http://pictureyou-neo.github.io/tags/%EC%A0%88%EB%8C%80%EA%B0%92/"},{"name":"논리연산","slug":"논리연산","permalink":"http://pictureyou-neo.github.io/tags/%EB%85%BC%EB%A6%AC%EC%97%B0%EC%82%B0/"},{"name":"랜덤","slug":"랜덤","permalink":"http://pictureyou-neo.github.io/tags/%EB%9E%9C%EB%8D%A4/"},{"name":"random","slug":"random","permalink":"http://pictureyou-neo.github.io/tags/random/"},{"name":"몫","slug":"몫","permalink":"http://pictureyou-neo.github.io/tags/%EB%AA%AB/"},{"name":"나머지","slug":"나머지","permalink":"http://pictureyou-neo.github.io/tags/%EB%82%98%EB%A8%B8%EC%A7%80/"},{"name":"randint","slug":"randint","permalink":"http://pictureyou-neo.github.io/tags/randint/"}]},{"title":"Hexo / 마크다운, 줄바꿈, 들여쓰기, 프리뷰, scaffold","slug":"hexo-markdown-troubleshooting-fix-change","date":"2020-09-21T03:09:32.000Z","updated":"2020-09-23T04:21:52.871Z","comments":true,"path":"2020/09/21/hexo-markdown-troubleshooting-fix-change/","link":"","permalink":"http://pictureyou-neo.github.io/2020/09/21/hexo-markdown-troubleshooting-fix-change/","excerpt":"","text":"#마크다운이 무엇인고? Github 원격저장소를 처음 만들었을 때 Readme.md 파일을 처음 접하게 되었다. Github 에서는 저장소에 접속하자 마자 보여주는 일종의 표지 역할을 하는데, 거의 대부분 잘 꾸며져 있었다. 나는 원격저장소를 개인적으로 사용하기 때문에 굳이 관심이 없었는데, 헥소를 이용한 포스팅을 할때 마크다운 언어를 사용 할 수밖에 없었다. 마크다운, 확장자 .md 를 사용하는 파일은 텍스트를 서식이 있는 문서로 바꿔주는 마크업 언어 라고 한다. html 과 유사한 느낌 이면서도 사용방법은 압도적으로 간단하다. 마크다운의 역사나, 간단한 사용법은 아래 위키 링크를 참고해 보자.위키백과 : 마크다운 [목차] 줄바꿈은 어떻게 하지? 들여쓰기는? 문법에 익숙하지 않은 뉴비를 위하여 프리뷰 창이 밋밋하다면? scaffolds 활용, 글의 틀을 만들어 두자 #줄바꿈은 어떻게 하지? 들여쓰기는? 제일 먼저 글을 쓰고, 기본적인 사용방법을 익힌 후 마크다운을 써두었던 글에 적용해 본 다음 로컬 서버에서 확인해 보았다. 그런데 이게 왠걸? 줄바꿈이 하나도 되어있지 않아서 가독성이 떨어지는 문제가 있었다. 그래서 생각해 낸 꼼수가, “######” 으로 작성되는 h6 헤더로 특수문자 [ㄱ 한자] 공백으로 해결할 수 있었다. 사실 내입장에서는 “######” 를 잘 사용하지 않으므로, 적절한 꼼수인듯 하다. 들여쓰기도 이 공백문자를 활용하면 바로 활용 가능하다. 덧붙여서, 줄간격은 hexo 테마의 h6 설정부분에서 xx em 으로 조절이 가능하다. #문법에 익숙하지 않은 뉴비를 위하여 VSC 에서는 mark down 문서를 위한 여러가지의 extention 이 있는데, 그중에서 프리뷰 extension 은 매우유용하다. Markdown Preview Enhanced 특히, .md 파일을 수정하려고 열게 됨과 동시에 preview 를 띄워 주는게 은근 시간단축에 용이하다. 그렇지 않을경우에는 문서명, 우클릭, 혹은 단축키를 외워야 하는 다소 귀찮음이 동반된다. 자동 프리뷰 설정은, VSC Settings 에 가서 “Automatically Show Preview of Markdown Being Edited” 체크박스에 체크를 해주면 된다. #프리뷰 창이 밋밋하다면? 프리뷰 extension 을 설치 하더라도, 막상 프리뷰 화면을 보면 흰바탕에 검은 글씨, Hexo 테마에서 내가 정의했던 색이나 글꼴 크기는 온데간데 없다. Preview 화면을 띄울때 하나의 웹페이지를 띄우는것처럼 동작되어서 Hexo 와는 별개의 CSS 파일이 존재한다. 따라서 Preview 화면을 테마가 적용되어 배포된 블로그 화면처럼 하길 원하거나, 배경색과 폰트및 색깔 변경을 하려면 “.less” 파일을 건드려 줘야 한다. style.less 파일을 직접 수정하는 방법과 나만의 less 파일을 추가하여 사용할 수도 있다. MPE(Markdown Preview Enhanced) 페이지에서 아주 자세하게 소개하고 있다.Customize CSS #scaffolds 활용, 글의 틀을 만들어 두자 아무리 markdown 문법을 잘 알고 숙달되었다고 하더라도, 생산성에 도움을 줄 수 없다면 계륵에 불과하다. Hexo 에서 제공하는 scaffolds 는 새로운 포스트를 만들었을 때 사전 정의해둔 글의 틀이 마크다운 형식으로 로드 될 수 있게 해준다. Hexo 패키지의 scaffolds 폴더 내에 있는 .md 파일들을 수정하면 바로 사용 가능하다. 매일매일 이것저것 추가하느라 자주 바뀌지만, 현 시점에서 내가 사용하고 있는 내용은 이렇다. 참고로 아래 내용을 사용하려면 [‘’’] 를 [```] 로 바꿔 써야 한다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107---title: &#123;&#123; title &#125;&#125;categories: - -tags: - ---&lt;!--============================================================--&gt;&lt;!-- [서론] --&gt;&lt;!--============================================================--&gt;# #서론이 포스트의 요약내용&gt;인용구로 주제를 강조해 보자###### &lt;!--========================[구분선]============================--&gt;###### ---###### &lt;!--============================================================--&gt;&lt;!-- [본론] --&gt;&lt;!--============================================================--&gt;&lt;!--[주제]--&gt;## **#대주제를 이곳에 써보자**&lt;!--[소주제]--&gt;*소주제를 이곳에 써보자*&lt;!--[코드]--&gt;&#x27;&#x27;&#x27; py&quot;&quot;&quot;Code should be goes here, change language&quot;&quot;&quot;&#x27;&#x27;&#x27;&lt;!--[결과]--&gt;**결과**&#x27;&#x27;&#x27; txt소주제의 결과를 여기에 써보자&#x27;&#x27;&#x27;&lt;!--[소주제구분]==================================--&gt;###### ###### &lt;!--[소주제구분]==================================--&gt;&lt;!--[소주제]--&gt;*소주제를 이곳에 써보자*&lt;!--[코드]--&gt;&#x27;&#x27;&#x27; py&quot;&quot;&quot;Code should be goes here, change language&quot;&quot;&quot;&#x27;&#x27;&#x27;&lt;!--[결과]--&gt;**결과**&#x27;&#x27;&#x27; txt소주제의 결과를 여기에 써보자&#x27;&#x27;&#x27;&lt;!--[소주제구분]==================================--&gt;###### ###### &lt;!--[소주제구분]==================================--&gt;&lt;!--========================[구분선]============================--&gt;###### ---###### &lt;!--============================================================--&gt;&lt;!--[주제]--&gt;## **#대주제를 이곳에 써보자**&lt;!--[소주제]--&gt;*소주제를 이곳에 써보자*&lt;!--[코드]--&gt;&#x27;&#x27;&#x27; py&quot;&quot;&quot;Code should be goes here, change language&quot;&quot;&quot;&#x27;&#x27;&#x27;&lt;!--[결과]--&gt;**결과**&#x27;&#x27;&#x27; txt소주제의 결과를 여기에 써보자&#x27;&#x27;&#x27;&lt;!--[소주제구분]==================================--&gt;###### ###### &lt;!--[소주제구분]==================================--&gt;&lt;!--========================[구분선]============================--&gt;###### ---###### &lt;!--============================================================--&gt;&lt;!-- [결론] --&gt;&lt;!--============================================================--&gt;# #결론마무리&lt;!--========================[구분선]============================--&gt;###### ---###### &lt;!--============================================================--&gt;&lt;!-- [참조] --&gt;&lt;!--============================================================--&gt;# #Reference* [킹황갓 구글](google.com)&lt;!--============================================================--&gt;&lt;!-- [로고] --&gt;&lt;!--============================================================--&gt;###### ###### ![](/images/rabbit-100.png)###### #이제는 콘텐츠다 여기까지 하고나니, 이제 얼추 포스팅의 형태가 잡혔다. 이제는 콘텐츠 생산을 해야할 차례 이다. 물론 추가하고 싶은 기능들도 많고 그중에 각주는 최대한 빨리 적용해 볼 생각이다. #Reference 킹황갓 구글 Markdown Preview Enhanced 위키백과 : 마크다운","categories":[{"name":"2_Web","slug":"2-Web","permalink":"http://pictureyou-neo.github.io/categories/2-Web/"},{"name":"Hexo","slug":"2-Web/Hexo","permalink":"http://pictureyou-neo.github.io/categories/2-Web/Hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://pictureyou-neo.github.io/tags/hexo/"},{"name":"헥소","slug":"헥소","permalink":"http://pictureyou-neo.github.io/tags/%ED%97%A5%EC%86%8C/"},{"name":"VSC","slug":"VSC","permalink":"http://pictureyou-neo.github.io/tags/VSC/"},{"name":"markdown","slug":"markdown","permalink":"http://pictureyou-neo.github.io/tags/markdown/"},{"name":".md","slug":"md","permalink":"http://pictureyou-neo.github.io/tags/md/"},{"name":"마크다운","slug":"마크다운","permalink":"http://pictureyou-neo.github.io/tags/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4/"},{"name":"Preview","slug":"Preview","permalink":"http://pictureyou-neo.github.io/tags/Preview/"},{"name":".less","slug":"less","permalink":"http://pictureyou-neo.github.io/tags/less/"},{"name":"줄바꿈","slug":"줄바꿈","permalink":"http://pictureyou-neo.github.io/tags/%EC%A4%84%EB%B0%94%EA%BF%88/"},{"name":"newline","slug":"newline","permalink":"http://pictureyou-neo.github.io/tags/newline/"},{"name":"들여쓰기","slug":"들여쓰기","permalink":"http://pictureyou-neo.github.io/tags/%EB%93%A4%EC%97%AC%EC%93%B0%EA%B8%B0/"},{"name":"inline","slug":"inline","permalink":"http://pictureyou-neo.github.io/tags/inline/"},{"name":"scaffold","slug":"scaffold","permalink":"http://pictureyou-neo.github.io/tags/scaffold/"},{"name":"template","slug":"template","permalink":"http://pictureyou-neo.github.io/tags/template/"}]},{"title":"Python basic / 파이썬 문자열 기본, 문자열 제어, 주석처리","slug":"python-basic-character","date":"2020-09-16T14:12:29.000Z","updated":"2020-09-23T04:15:32.020Z","comments":true,"path":"2020/09/16/python-basic-character/","link":"","permalink":"http://pictureyou-neo.github.io/2020/09/16/python-basic-character/","excerpt":"","text":"#파이썬 문자열 기본, 문자열 제어, 주석처리 앞으로 Python 기본내용에 대해 정리해 보려고 한다. 가끔 문법이 혼동될때가 있는데, 정리된 내용을 보고 되새겨 보자. 유튜버 나도코딩 님의 무료강의를 들으면서 정리한 내용이다.기초강의 6시간짜리가 무려 “무료” 다.나는 3시간 더 들어야 한다 [목차] 문자열 기본 : print 를 사용하면 콘솔창에 출력이 가능하다. 문자열 기본 : 큰 따옴표 세개를 이용하여 여러줄과 줄바꿈 까지 포함하여 출력할 수 있다. 문자열 기본 : 변수 입력은 “+” 연산자로 함께 출력이 가능하다. 문자열 기본 : 숫자나 참거짓 경우 형변환을 사용해야 한다. 문자열 기본 : 콤마 사용도 가능하다. 문자열 기본 : 여러가지 포맷을 섞어서 print 할 수 있다. (python 3.6 이상) 문자열 제어 : 문자열의 경우 곱연산 제어도 가능하다. 문자열 제어 : 슬라이싱, 변수를 선언 뒤 마치 배열처럼 일부만 추출하여 사용한다. 문자열 제어 : 대소문자 변경, 문자열 내에 index 검색 및 단어 대치가 가능하다. 문자열 제어 : 탈출문자를 활용할 수 있다. 주석처리 : 코드의 특정 줄이나, 범위를 주석처리 한다. #문자열 기본 print 를 사용하면 콘솔창에 출력이 가능하다. 1234567# 변수 선언 후 출력var_en = &quot;abc&quot;var_kr = &quot;테스트&quot;var_num = 5678var_bol = Falseprint(var_en)print(var_kr) 결과 12abc테스트 큰 따옴표 세개를 이용하여 여러줄과 줄바꿈 까지 포함하여 출력할 수 있다. 1234567# 변수 선언 후 출력sentence = &quot;&quot;&quot;Hello Neo,The Matrix has you...Follow the white rabbit&quot;&quot;&quot;print(sentence) 결과 123Hello Neo,The Matrix has you...Follow the white rabbit 변수 입력은 “+” 연산자로 함께 출력이 가능하다.숫자나 참거짓 경우 형변환을 사용해야 한다. 12345# 문자열 변수 입력인 경우 &quot;+&quot; 사용가능print(var_en + var_kr)# 숫자 나 참거짓 변수 입력인 경우 형변환 사용해야함print(str(var_num) + var_kr)print(str(var_bol) + var_kr) 결과 123abc테스트5678테스트False테스트 콤마 사용도 가능하다. 123# &quot;+&quot; 대신 &quot;,&quot; 사용 가능하나, 공백이 강제로 들어감print(var_num , var_kr)print(var_bol , var_kr) 결과 125678 테스트False 테스트 여러가지 포맷을 섞어서 print 할 수 있다. (python 3.6 이상) 123color = &quot;Green&quot;number = 4print(f&quot;내가 좋아하는 색은 &#123;color&#125; 이고, 싫어하는 숫자는 &#123;number&#125; 입니다.&quot;) 결과 1내가 좋아하는 색은 Green 이고, 싫어하는 숫자는 4 입니다. #문자열 제어 문자열의 경우 곱연산 제어도 가능하다. 1234# 직접 입력도 가능print(&quot;Test&quot;)print(&quot;테스트&quot;*2)print(1234) 결과 123Test테스트테스트1234 슬라이싱, 변수를 선언 뒤 마치 배열처럼 일부만 추출하여 사용한다. 123jumin = &quot;890320-1234567&quot;print(&quot;주민등록번호 : &quot; + jumin)print(&quot;생년월일 : &quot; + jumin[:6]) 결과 12주민등록번호 : 890320-1234567생년월일 : 890320 대소문자 변경, 문자열 내에 index 검색 및 단어 대치가 가능하다. 1234567891011string = &quot;I want to be a FULL stack developer&quot;print(string.lower())print(string.upper())print(len(string))print(string.replace(&quot;FULL stak&quot;, &quot;Embedded&quot;))index = string.index(&quot;F&quot;)print(index)print(string.find(&quot;developer&quot;))print(string.index(&quot;stack&quot;)) 결과 1234567i want to be a full stack developerI WANT TO BE A FULL STACK DEVELOPER35I want to be a Embedded developer152620 탈출문자를 활용할 수 있다. 1234print(&quot;줄바꿈\\n테스트&quot;)print(&quot;\\&quot;따옴표를 문자열로 인식\\&quot;&quot;)print(&quot;\\\\\\&quot; 를 출력가능&quot;)print(&quot;여기는 안보일 예정 \\r처음부터&quot;) 결과 12345줄바꿈테스트&quot;따옴표를 문자열로 인식&quot;\\&quot; 를 출력가능처음부터 #주석처리 코드의 특정 줄이나, 범위를 주석처리 한다. 123456&quot;&quot;&quot;This is first comment test for my python study.&quot;&quot;&quot;#print(&quot;Comment test&quot;)print(&quot;코멘트 테스트&quot;)print(&quot;따옴표 세개는 범위주석이고, # 은 한줄 주석이다.&quot;) 결과 12코멘트 테스트따옴표 세개는 범위주석이고, # 은 한줄 주석이다. #C 랑 비슷한데? 여기까지는 C 랑 비슷한 느낌인데, 문자열 제어가 간단하면서도 기억해야할 것들이 꽤나 있었다. print 는 디버깅 할 때에도 자주 쓰이므로 기본이 된다. #Reference 나도코딩 님의 파이썬 코딩 무료강의 킹황갓 구글","categories":[{"name":"4_Study","slug":"4-Study","permalink":"http://pictureyou-neo.github.io/categories/4-Study/"},{"name":"Python","slug":"4-Study/Python","permalink":"http://pictureyou-neo.github.io/categories/4-Study/Python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://pictureyou-neo.github.io/tags/python/"},{"name":"comment","slug":"comment","permalink":"http://pictureyou-neo.github.io/tags/comment/"},{"name":"character","slug":"character","permalink":"http://pictureyou-neo.github.io/tags/character/"},{"name":"탈출문자","slug":"탈출문자","permalink":"http://pictureyou-neo.github.io/tags/%ED%83%88%EC%B6%9C%EB%AC%B8%EC%9E%90/"},{"name":"파이썬","slug":"파이썬","permalink":"http://pictureyou-neo.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"},{"name":"주석","slug":"주석","permalink":"http://pictureyou-neo.github.io/tags/%EC%A3%BC%EC%84%9D/"},{"name":"문자열","slug":"문자열","permalink":"http://pictureyou-neo.github.io/tags/%EB%AC%B8%EC%9E%90%EC%97%B4/"},{"name":"문자열제어","slug":"문자열제어","permalink":"http://pictureyou-neo.github.io/tags/%EB%AC%B8%EC%9E%90%EC%97%B4%EC%A0%9C%EC%96%B4/"},{"name":"print","slug":"print","permalink":"http://pictureyou-neo.github.io/tags/print/"},{"name":"기초","slug":"기초","permalink":"http://pictureyou-neo.github.io/tags/%EA%B8%B0%EC%B4%88/"},{"name":"basic","slug":"basic","permalink":"http://pictureyou-neo.github.io/tags/basic/"},{"name":"py","slug":"py","permalink":"http://pictureyou-neo.github.io/tags/py/"},{"name":"escape","slug":"escape","permalink":"http://pictureyou-neo.github.io/tags/escape/"}]},{"title":"VSC / 비쥬얼 스튜디오 코드","slug":"vsc-visual-studio-code","date":"2020-09-15T13:00:50.000Z","updated":"2020-09-23T04:19:57.929Z","comments":true,"path":"2020/09/15/vsc-visual-studio-code/","link":"","permalink":"http://pictureyou-neo.github.io/2020/09/15/vsc-visual-studio-code/","excerpt":"","text":"#텍스트 에디터? 아주 어렸을 때, 정보처리기능사 자격증을 따기 위해 Visual basic 이라는 툴을 사용했었고, 대학 신입생 때에는 처음 C 와 C++ 코드를 작성하기 위해 Visual Studio 2008 를 사용 했었다. 그 때부터 지금까지 내가 거쳐갔던 IDE 툴과 텍스트 에디터 들이 많지만, 오늘은 최근 가장 핫한 텍스트 에디터인 Visual Studio Code, 줄여서 VSC 에 대해 적어보고자 한다. #made by. Microsoft 마이크로 소프트가 만들었다. 2016년 처음 웹으로 배포 되었다고 한다. 마소가 핫한 텍스트 에디터를 만들어서 리딩 엔지니어들을 끌어모으려 한다는 어느 Youtube 영상에 자연스럽게 동의할 만큼 아주 깔끔하다. 나는 2016년 당시 Atom 을 사용하고 있었고, 2018년 직장동료의 권유로 갈아탔다. 1. 문서편집 문서 편집(text edit) 기능 자체는 Windows 에서 기본 제공하는 메모장(notepad)으로도 충분하다. VSC 는 사용하는 프로그래밍 언어를 인식하여, 가독성 있는 편집화면을 제공해 줄 수 있다. 2. 다양한 extensions 어쩌면 VSC 를 사용하는 가장 큰 이유 일지 모른다. 설마 이게 되겠어? 싶은게 된다. extension 추천은 따로 포스팅 하고 싶을 정도로 그 종류가 많은데, 가장 최근의 경우는 마크다운(markdown, .md) 문법을 사용하려고 했을 때이다. 문법에 서툴러서 작성하고 브라우저나 로컬 서버에서 봐야만 했다. 여러 텍스트 에디터를 찾아보던 중에 결국 VSC 의 Markdown Preview Github Styling extension 으로 정착했다. 3. Git 제어 사실, 내가 재직중인 업계에서는 잘 쓰는지 모르겠다. 나도 많이 늦게 접하긴 했으나 Git은 버전관리에 매우 강력하고 Git bash 나 Source tree 같은 툴을 사용해야 한다. VSC 는 Git 을 사용하기 매우 좋은 환경이다. 4. 내장 terminal CLI 인터페이스를 사용하기 위해서는 윈도우키-&gt;cmd 를 통해 command prompt 를 사용해야 한다. 거의 대부분 GUI build 를 지원하지 않는 환경에서는 CLI 인터페이스를 활용하여 make 해야만 한다. VSC 는 terminal 이 내장되어 있어 알트탭 없이도 한 화면에서 가능하다.단축키는 [ Ctrl+Shift+` “ ] 이다. 5. Search 모든 텍스트 편집기가 지원하는 기능이다. VSC 는 단축키 [ Ctrl+Shift+F “ ] 로 경로 내의 검색이 가능하며, 조건부 검색도 가능하다. 개인적으로, 이 기능만 있어도 Github 에서 reference project 를 다운받아 얼마든지 새로운 언어나 환경에 도전할 수 있다고 생각한다. #늘 쓰던걸로 특히 여러가지 언어를 쓰는 사람은 하나의 툴로 여러가지 언어를 사용할 수 있기 때문에 매우 편리하다. 나도 아직 특정 업무를 할 때는 다른 툴을 쓰고 있지만(비교 : Winmerge, Beyond compare, 매크로 : notepad++), 왠지 extension 이나 다른 어떤 방법으로 저런 것들도 VSC 에서 가능할것만 같다. #Reference 위키백과 : VSC","categories":[{"name":"3_Review","slug":"3-Review","permalink":"http://pictureyou-neo.github.io/categories/3-Review/"},{"name":"Tool","slug":"3-Review/Tool","permalink":"http://pictureyou-neo.github.io/categories/3-Review/Tool/"}],"tags":[{"name":"microsoft","slug":"microsoft","permalink":"http://pictureyou-neo.github.io/tags/microsoft/"},{"name":"MS","slug":"MS","permalink":"http://pictureyou-neo.github.io/tags/MS/"},{"name":"VSC","slug":"VSC","permalink":"http://pictureyou-neo.github.io/tags/VSC/"},{"name":"visualstudiocode","slug":"visualstudiocode","permalink":"http://pictureyou-neo.github.io/tags/visualstudiocode/"},{"name":"textedif","slug":"textedif","permalink":"http://pictureyou-neo.github.io/tags/textedif/"},{"name":"추천","slug":"추천","permalink":"http://pictureyou-neo.github.io/tags/%EC%B6%94%EC%B2%9C/"},{"name":"코드","slug":"코드","permalink":"http://pictureyou-neo.github.io/tags/%EC%BD%94%EB%93%9C/"},{"name":"markdown","slug":"markdown","permalink":"http://pictureyou-neo.github.io/tags/markdown/"},{"name":".md","slug":"md","permalink":"http://pictureyou-neo.github.io/tags/md/"},{"name":"extension","slug":"extension","permalink":"http://pictureyou-neo.github.io/tags/extension/"},{"name":"python","slug":"python","permalink":"http://pictureyou-neo.github.io/tags/python/"}]},{"title":"Hexo / 테마 적용","slug":"hexo-theme","date":"2020-09-15T06:10:05.000Z","updated":"2020-09-21T03:23:59.257Z","comments":true,"path":"2020/09/15/hexo-theme/","link":"","permalink":"http://pictureyou-neo.github.io/2020/09/15/hexo-theme/","excerpt":"","text":"#설치는 했는데 Hexo 를 설치하고 나면 default theme 인 landscape 테마가 적용되어 있다. 이 나름대로도 깔끔하지만, 다른 테마 혹은 테마 수정하고 싶은 욕구가 솟구쳐 오를 것이다. #어떤 테마를 적용해 볼까?https://hexo.io/themes/ Hexo 공식 홈페이지에서 제공하는 테마의 종류를 볼 수 있다. 종류는 매우 많은데… 중국어 의 압박이 매우 심하다 이 중에, 마음에 드는걸 골라도 된다. 하지만 나는 눈여겨 봤던 필오 님의 블로그 에서 “Theme by PPOffice” 를 점찍어 놨기 때문에, 바로 PPOffice github 페이지를 찾아나섰다. Repository 를 보니 다른 테마도 많다. 안에 들어가 보면 sample design 을 볼 수 있다. 그 중에서도 테마 hueman 이 바로 내가 찾던 테마 였다. 1. Theme 다운로드 정말 좋은 세상이다. git bash 에서 아래 명령으로 git을 활용하여 theme 를 다운받을 수 있다. 1$ git clone https://github.com/ppoffice/hexo-theme-hueman.git git clone 을 수행하는 경로는 설치한 hexo 내부의 theme 폴더 에서 받아도 되고, 아니면 아무데나 받아서 복붙하면 된다. 2. 적용 확인1$ hexo server 다시한번 hexo server 를 수행하면 로컬서버에서 Hueman 테마가 적용된 것을 볼 수 있다. #원래 꾸미는데 시간이 제일 오래걸림 게임을 할 때도 캐릭터 외형이나 룩질을 하느라 시간 다간다. 아마 초반에는 이러한 과정을 거쳐야 직성이 풀리는듯 하다. 다음에는 Hexo hueman기본테마에서 내가 수정했던 포인트 들을 적어보려고 한다. #Reference https://github.com/ppoffice/hexo-theme-hueman https://spurin.com/2020/01/04/Creating-a-Blog-Website-with-Docker-Hexo-Github-Free-Hosting-and-HTTPS/","categories":[{"name":"2_Web","slug":"2-Web","permalink":"http://pictureyou-neo.github.io/categories/2-Web/"},{"name":"Hexo","slug":"2-Web/Hexo","permalink":"http://pictureyou-neo.github.io/categories/2-Web/Hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://pictureyou-neo.github.io/tags/hexo/"},{"name":"PPOffice","slug":"PPOffice","permalink":"http://pictureyou-neo.github.io/tags/PPOffice/"},{"name":"Github","slug":"Github","permalink":"http://pictureyou-neo.github.io/tags/Github/"},{"name":"Git","slug":"Git","permalink":"http://pictureyou-neo.github.io/tags/Git/"},{"name":"theme","slug":"theme","permalink":"http://pictureyou-neo.github.io/tags/theme/"},{"name":"hueman","slug":"hueman","permalink":"http://pictureyou-neo.github.io/tags/hueman/"},{"name":"헥소","slug":"헥소","permalink":"http://pictureyou-neo.github.io/tags/%ED%97%A5%EC%86%8C/"},{"name":"install","slug":"install","permalink":"http://pictureyou-neo.github.io/tags/install/"}]},{"title":"Hexo / 설치","slug":"hexo-install","date":"2020-09-15T05:13:04.000Z","updated":"2020-09-21T03:23:07.404Z","comments":true,"path":"2020/09/15/hexo-install/","link":"","permalink":"http://pictureyou-neo.github.io/2020/09/15/hexo-install/","excerpt":"","text":"#Hexo를 접하다 며칠 전, html5 와 css3 에 대한 정보를 찾고자 검색하던 중, 한 블로그를 들어가게 되었다. 필오의 개발 docs 프론트 엔드 엔지니어 ‘필오’ 님의 블로그. 깔끔하고 요즘 유행하는 다크모드st 에다가, 깔끔하게 정리가 잘 되어 있어서 순식간에 매료되었다. 마치 잘 정리된 필기장을 보는 느낌. 따라서 만들어 보고 싶었다. #설치를 해볼까? 필오 님의 블로그 하단에 “Powered by Hexo” 를 보고 무작정 Hexo 에 대해 검색하기 시작했다. 이미 많은 분들이 설명을 잘 해주셨는데, 내가 참조했던 곳은 여기다. Mr.LakuLaku무려 닉네임이 라꾸라꾸… Node.js 에 대해 정말 아무것도 몰라서 따라하다가 약간 해멨는데 그 부분에 대해 아주 약간의 보강하여 순서를 적는다. 1. Node.js 설치 Node.js 다운로드여기에 들어가서 설치하면 된다. 2. Node.js command prompt 실행 설치가 끝나고 윈도우 키를 눌러보면, 새로운 command prompt 가 생겼다.실행 후, 아래 명령으로 차례로 node module install, hexo install 을 진행하면 된다. 12$ npm install$ npm install hexo-cli -g 3. Hexo 설치 Hexo 블로그의 뼈대를 만들어 주는 과정이다. 아래 명령을 npm cmd 에서 수행하면 된다. 1$ hexo init hexo_blog_name 나는 Github pages 를 통해 호스팅 할 예정이기 때문에 hexo_blog_name 에는 “pictureyou-neo.github.io” 로 적었다. 여기에 다른걸 써줘도 되지만, 이유가 기억이 안난다. 매우 중요한 이유가 있었는데… 4. Local server 구동 Hexo 설치를 하고나면, Github 에 올리기 전에 내 PC 에서 먼저 확인이 가능하다. 12$ cd hexo_path$ hexo server hexo_path 는 hexo가 설치된 경로이다. 한 단계 안으로 들어간 뒤, hexo server 명령을 통해 로컬에서 확인이 가능하다. 이후, 사용하는 브라우저로 http://localhost:4000/ 에 접속해 보면 Hexo blog 를 처음 만나볼 수 있다. (즐겨찾기에 등록 추천) #모방은 창작의 어머니 사실, 이 블로그는 필오님의 디자인을 거의 따라 만들었다. 어떻게 꾸역꾸역 따라 만들었는지는 차례로 포스팅 해 볼 예정이다. 다음은 Hexo theme 적용하기에 대해 적어볼까 한다. #Reference https://feel5ny.github.io https://blog.naver.com/beat_chani/222070917890","categories":[{"name":"2_Web","slug":"2-Web","permalink":"http://pictureyou-neo.github.io/categories/2-Web/"},{"name":"Hexo","slug":"2-Web/Hexo","permalink":"http://pictureyou-neo.github.io/categories/2-Web/Hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://pictureyou-neo.github.io/tags/hexo/"},{"name":"PPOffice","slug":"PPOffice","permalink":"http://pictureyou-neo.github.io/tags/PPOffice/"},{"name":"Github","slug":"Github","permalink":"http://pictureyou-neo.github.io/tags/Github/"},{"name":"Git","slug":"Git","permalink":"http://pictureyou-neo.github.io/tags/Git/"},{"name":"theme","slug":"theme","permalink":"http://pictureyou-neo.github.io/tags/theme/"},{"name":"hueman","slug":"hueman","permalink":"http://pictureyou-neo.github.io/tags/hueman/"},{"name":"헥소","slug":"헥소","permalink":"http://pictureyou-neo.github.io/tags/%ED%97%A5%EC%86%8C/"},{"name":"install","slug":"install","permalink":"http://pictureyou-neo.github.io/tags/install/"}]},{"title":"내가 블로그를 해야하는 이유","slug":"prologue","date":"2020-09-14T15:46:08.000Z","updated":"2020-09-21T03:24:54.401Z","comments":true,"path":"2020/09/15/prologue/","link":"","permalink":"http://pictureyou-neo.github.io/2020/09/15/prologue/","excerpt":"","text":"#Prologue 이 블로그를 본격적으로 시작하기 앞서서, 생각했던 내용들을 적어두고 되새김질 하고자 한다. Follow the white rabbit 블로그 이름은 영화 Matrix 에서 착안하였다. Neo 가 PC 앞에서 잠들었을 때, 콘솔창(?)에 이런 메세지가 날아온다. Wake up, Neo… The Matrix has you… Follow the white rabbit… Neo 가 흰토끼를 쫓아가면서 영화가 시작된다. 나도, 이 블로그를 통해 Matrix 의 결말에 다가갈 수 있지 않을까. #Reasons 물론 진짜 이유는 따로 있다. 1. 부자가 되고 싶다 온 인류의 염원이 아닐까? 연간 집값 상승률이 웬만한 직장인 연봉 상승률 보다 높은 지금, 내가 할 수 있는것은 무엇일까. 내게도 언젠가 기회가 오겠지만, 나는 그 때 준비가 되어 있을까? 2. 직무 특성상, 성과를 정리하기 어려워서 언젠가 포스트를 통해 밝혀 지겠지만, 나는 프로젝트를 끝맺음으로 성과를 내지 않는다. 때때로 얄팍한 기술과 꼼수로 문제를 해결하고 나면 공허하기 까지 하다. 나는 지금 유형의 결과물로 인해 느낄 수 있는 성취감이 필요한 시기를 겪고 있다. 3. 뭘 해야할지 몰라서 나는 상대적으로 폐쇄적인 업계에서 일하고 있다. 매번 새로운 기술을 접할때 마다 이미 다른 업계에서 적용한 내용을 참고할 수 있어서 좋지만, 기술 트렌드 follow up 이 매우 느리다는 단점이 있다. 내가 배우고 싶은것, 온갖 내용을 소화하다 보면, 길이 보이지 않을까. 4. 기억하고 싶어서 “RAM 이 딸린다” 라는 표현이 가장 적절하다. 내머리속의 지우개 는 아니다. 어디에 어떤 정보가 있는지 까지만 기억하고 (주소값 포인터만 기억) 내용은 잊어버려야 새로운 정보, 빅픽쳐를 보는데 용이하다. 마치 우리가 요즘 전화번호를 외우지 않는 것과 일맥상통한다. 구글이 다 알고 있으니까. 이곳에 적는 내용들은 내가 언젠가 그 문제로 다시 돌아 오더라도, 나만의 형태로 기억할 수 있는 branch 가 되었으면 한다. 5. 말을 조리있게 잘 하고싶어서 첫 직장 사수님은 말씀을 정말 조리있게 잘 하셨다. 직무 특성이기도 하지만, 순발력으로 듣는사람이 이해하기 쉽게, 맛깔나는 비유가 곁들여진다. 요즘 나는 어떤 주제에 대해 나의 의견을 피력할때 마다 어디서 부터 어느 수준으로 말해야 하는지 혼란스럽다. 연차가 쌓여갈수록 더 힘들어진다. 6. 스트레스를 해소하고 싶어서 2019년 말, 일종의 번아웃이 찾아왔다. 의외로 글로 적어서 생각을 배출해 내는것이 스트레스 해소에 도움이 되는것 같았다. 지금은 대략 세번째 번아웃이 찾아왔다. 변화가 필요하다. #Why HEXO? 처음에는 블로깅은 생각지도 못했다. Youtube 로 Python 을 공부하고 있었다. (이러이러한 채널들을 봤다.) @얄팍한코딩사전@나도코딩@노마드코더@freecodecamp@KeithGalli 그런데 Python 이나, Git, HTML, CSS 등, 내가 궁금했으나 영상에 나오지 않는 정보를 찾다보니, 매우 깔끔하고 이쁘고 유려하고… 맘에 쏙 드는 블로그들이 많았다. 처음에는 별 생각이 없다가 도메인을 보고 이거다 !!! 싶었다. Github 를 이용하여 호스팅 비용 없이도 블로깅이 가능하고, 더불어 프론트엔드 겉핥기 정도는 할 수 있을것 같았다. 이미 이걸 하면서 node.js 까지… 맛만 봤다. 마크다운(.md) 포맷이 언어별 코드 인용양식도 지원해 주니 이보다 완벽할 수는 없다. 1$ git commit -m &quot;First post!&quot; #Epilogue 여기까지, 마크다운 문법 연습이었다. 좋은 자습도구가 되었으면 하는 바램이다. #Reference google.com hello-world.md","categories":[{"name":"1_Retro","slug":"1-Retro","permalink":"http://pictureyou-neo.github.io/categories/1-Retro/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://pictureyou-neo.github.io/tags/markdown/"},{"name":".md","slug":"md","permalink":"http://pictureyou-neo.github.io/tags/md/"},{"name":"matrix","slug":"matrix","permalink":"http://pictureyou-neo.github.io/tags/matrix/"},{"name":"FTWR","slug":"FTWR","permalink":"http://pictureyou-neo.github.io/tags/FTWR/"},{"name":"neo","slug":"neo","permalink":"http://pictureyou-neo.github.io/tags/neo/"}]}],"categories":[{"name":"2_Web","slug":"2-Web","permalink":"http://pictureyou-neo.github.io/categories/2-Web/"},{"name":"Hexo","slug":"2-Web/Hexo","permalink":"http://pictureyou-neo.github.io/categories/2-Web/Hexo/"},{"name":"4_Study","slug":"4-Study","permalink":"http://pictureyou-neo.github.io/categories/4-Study/"},{"name":"Python","slug":"4-Study/Python","permalink":"http://pictureyou-neo.github.io/categories/4-Study/Python/"},{"name":"3_Review","slug":"3-Review","permalink":"http://pictureyou-neo.github.io/categories/3-Review/"},{"name":"Tool","slug":"3-Review/Tool","permalink":"http://pictureyou-neo.github.io/categories/3-Review/Tool/"},{"name":"1_Retro","slug":"1-Retro","permalink":"http://pictureyou-neo.github.io/categories/1-Retro/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://pictureyou-neo.github.io/tags/hexo/"},{"name":"PPOffice","slug":"PPOffice","permalink":"http://pictureyou-neo.github.io/tags/PPOffice/"},{"name":"theme","slug":"theme","permalink":"http://pictureyou-neo.github.io/tags/theme/"},{"name":"hueman","slug":"hueman","permalink":"http://pictureyou-neo.github.io/tags/hueman/"},{"name":"헥소","slug":"헥소","permalink":"http://pictureyou-neo.github.io/tags/%ED%97%A5%EC%86%8C/"},{"name":"테마","slug":"테마","permalink":"http://pictureyou-neo.github.io/tags/%ED%85%8C%EB%A7%88/"},{"name":"troubleshooting","slug":"troubleshooting","permalink":"http://pictureyou-neo.github.io/tags/troubleshooting/"},{"name":"에러","slug":"에러","permalink":"http://pictureyou-neo.github.io/tags/%EC%97%90%EB%9F%AC/"},{"name":"해결","slug":"해결","permalink":"http://pictureyou-neo.github.io/tags/%ED%95%B4%EA%B2%B0/"},{"name":"사이드바","slug":"사이드바","permalink":"http://pictureyou-neo.github.io/tags/%EC%82%AC%EC%9D%B4%EB%93%9C%EB%B0%94/"},{"name":"sidebar","slug":"sidebar","permalink":"http://pictureyou-neo.github.io/tags/sidebar/"},{"name":"color","slug":"color","permalink":"http://pictureyou-neo.github.io/tags/color/"},{"name":"카테고리","slug":"카테고리","permalink":"http://pictureyou-neo.github.io/tags/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/"},{"name":"index.","slug":"index","permalink":"http://pictureyou-neo.github.io/tags/index/"},{"name":"색변경","slug":"색변경","permalink":"http://pictureyou-neo.github.io/tags/%EC%83%89%EB%B3%80%EA%B2%BD/"},{"name":"색깔변경","slug":"색깔변경","permalink":"http://pictureyou-neo.github.io/tags/%EC%83%89%EA%B9%94%EB%B3%80%EA%B2%BD/"},{"name":"FontAwesome","slug":"FontAwesome","permalink":"http://pictureyou-neo.github.io/tags/FontAwesome/"},{"name":"python","slug":"python","permalink":"http://pictureyou-neo.github.io/tags/python/"},{"name":"파이썬","slug":"파이썬","permalink":"http://pictureyou-neo.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"},{"name":"기초","slug":"기초","permalink":"http://pictureyou-neo.github.io/tags/%EA%B8%B0%EC%B4%88/"},{"name":"basic","slug":"basic","permalink":"http://pictureyou-neo.github.io/tags/basic/"},{"name":"py","slug":"py","permalink":"http://pictureyou-neo.github.io/tags/py/"},{"name":"연산자","slug":"연산자","permalink":"http://pictureyou-neo.github.io/tags/%EC%97%B0%EC%82%B0%EC%9E%90/"},{"name":"calculation","slug":"calculation","permalink":"http://pictureyou-neo.github.io/tags/calculation/"},{"name":"숫자처리함수","slug":"숫자처리함수","permalink":"http://pictureyou-neo.github.io/tags/%EC%88%AB%EC%9E%90%EC%B2%98%EB%A6%AC%ED%95%A8%EC%88%98/"},{"name":"abs","slug":"abs","permalink":"http://pictureyou-neo.github.io/tags/abs/"},{"name":"절대값","slug":"절대값","permalink":"http://pictureyou-neo.github.io/tags/%EC%A0%88%EB%8C%80%EA%B0%92/"},{"name":"논리연산","slug":"논리연산","permalink":"http://pictureyou-neo.github.io/tags/%EB%85%BC%EB%A6%AC%EC%97%B0%EC%82%B0/"},{"name":"랜덤","slug":"랜덤","permalink":"http://pictureyou-neo.github.io/tags/%EB%9E%9C%EB%8D%A4/"},{"name":"random","slug":"random","permalink":"http://pictureyou-neo.github.io/tags/random/"},{"name":"몫","slug":"몫","permalink":"http://pictureyou-neo.github.io/tags/%EB%AA%AB/"},{"name":"나머지","slug":"나머지","permalink":"http://pictureyou-neo.github.io/tags/%EB%82%98%EB%A8%B8%EC%A7%80/"},{"name":"randint","slug":"randint","permalink":"http://pictureyou-neo.github.io/tags/randint/"},{"name":"VSC","slug":"VSC","permalink":"http://pictureyou-neo.github.io/tags/VSC/"},{"name":"markdown","slug":"markdown","permalink":"http://pictureyou-neo.github.io/tags/markdown/"},{"name":".md","slug":"md","permalink":"http://pictureyou-neo.github.io/tags/md/"},{"name":"마크다운","slug":"마크다운","permalink":"http://pictureyou-neo.github.io/tags/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4/"},{"name":"Preview","slug":"Preview","permalink":"http://pictureyou-neo.github.io/tags/Preview/"},{"name":".less","slug":"less","permalink":"http://pictureyou-neo.github.io/tags/less/"},{"name":"줄바꿈","slug":"줄바꿈","permalink":"http://pictureyou-neo.github.io/tags/%EC%A4%84%EB%B0%94%EA%BF%88/"},{"name":"newline","slug":"newline","permalink":"http://pictureyou-neo.github.io/tags/newline/"},{"name":"들여쓰기","slug":"들여쓰기","permalink":"http://pictureyou-neo.github.io/tags/%EB%93%A4%EC%97%AC%EC%93%B0%EA%B8%B0/"},{"name":"inline","slug":"inline","permalink":"http://pictureyou-neo.github.io/tags/inline/"},{"name":"scaffold","slug":"scaffold","permalink":"http://pictureyou-neo.github.io/tags/scaffold/"},{"name":"template","slug":"template","permalink":"http://pictureyou-neo.github.io/tags/template/"},{"name":"comment","slug":"comment","permalink":"http://pictureyou-neo.github.io/tags/comment/"},{"name":"character","slug":"character","permalink":"http://pictureyou-neo.github.io/tags/character/"},{"name":"탈출문자","slug":"탈출문자","permalink":"http://pictureyou-neo.github.io/tags/%ED%83%88%EC%B6%9C%EB%AC%B8%EC%9E%90/"},{"name":"주석","slug":"주석","permalink":"http://pictureyou-neo.github.io/tags/%EC%A3%BC%EC%84%9D/"},{"name":"문자열","slug":"문자열","permalink":"http://pictureyou-neo.github.io/tags/%EB%AC%B8%EC%9E%90%EC%97%B4/"},{"name":"문자열제어","slug":"문자열제어","permalink":"http://pictureyou-neo.github.io/tags/%EB%AC%B8%EC%9E%90%EC%97%B4%EC%A0%9C%EC%96%B4/"},{"name":"print","slug":"print","permalink":"http://pictureyou-neo.github.io/tags/print/"},{"name":"escape","slug":"escape","permalink":"http://pictureyou-neo.github.io/tags/escape/"},{"name":"microsoft","slug":"microsoft","permalink":"http://pictureyou-neo.github.io/tags/microsoft/"},{"name":"MS","slug":"MS","permalink":"http://pictureyou-neo.github.io/tags/MS/"},{"name":"visualstudiocode","slug":"visualstudiocode","permalink":"http://pictureyou-neo.github.io/tags/visualstudiocode/"},{"name":"textedif","slug":"textedif","permalink":"http://pictureyou-neo.github.io/tags/textedif/"},{"name":"추천","slug":"추천","permalink":"http://pictureyou-neo.github.io/tags/%EC%B6%94%EC%B2%9C/"},{"name":"코드","slug":"코드","permalink":"http://pictureyou-neo.github.io/tags/%EC%BD%94%EB%93%9C/"},{"name":"extension","slug":"extension","permalink":"http://pictureyou-neo.github.io/tags/extension/"},{"name":"Github","slug":"Github","permalink":"http://pictureyou-neo.github.io/tags/Github/"},{"name":"Git","slug":"Git","permalink":"http://pictureyou-neo.github.io/tags/Git/"},{"name":"install","slug":"install","permalink":"http://pictureyou-neo.github.io/tags/install/"},{"name":"matrix","slug":"matrix","permalink":"http://pictureyou-neo.github.io/tags/matrix/"},{"name":"FTWR","slug":"FTWR","permalink":"http://pictureyou-neo.github.io/tags/FTWR/"},{"name":"neo","slug":"neo","permalink":"http://pictureyou-neo.github.io/tags/neo/"}]}